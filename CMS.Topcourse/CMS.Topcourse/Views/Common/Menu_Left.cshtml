@using CMS.Topcourse.Controllers
@using Topcourse.DataAccess.DTO
@using Topcourse.Utility;
@model List<Functions>

<button class="m-aside-left-close  m-aside-left-close--skin-dark" id="m_aside_left_close_btn">
    <i class="la la-close"></i>
</button>
<div id="m_aside_left" class="m-grid__item	m-aside-left m-aside-left--skin-dark">
    <!-- BEGIN: Aside Menu -->
    <div id="m_ver_menu" class="m-aside-menu  m-aside-menu--skin-dark m-aside-menu--submenu-skin-dark "
         data-menu-vertical="true"
         data-menu-scrollable="false" data-menu-dropdown-timeout="500">
        <ul class="m-menu__nav  m-menu__nav--dropdown-submenu-arrow ">
            @*<li class="m-menu__item  m-menu__item--active" aria-haspopup="true">
                <a href="/" class="m-menu__link ">
                    <i class="m-menu__link-icon flaticon-line-graph"></i>
                    <span class="m-menu__link-title">
                        <span class="m-menu__link-wrap">
                            <span class="m-menu__link-text">
                                Dashboard
                            </span>
                            <span class="m-menu__link-badge">
                                <span class="m-badge m-badge--danger">
                                    2
                                </span>
                            </span>
                        </span>
                    </span>
                </a>
            </li>*@
            <li class="m-menu__section">
                <h4 class="m-menu__section-text">
                    Admin Topcourse
                </h4>
                <i class="m-menu__section-icon flaticon-more-v3"></i>
            </li>
         
            @if (Model != null && Model.Count > 0)
            {
                var fathers = Model.FindAll(f => f.ParentID == 0);
                fathers.Sort((f1, f2) => f1.Order.CompareTo(f2.Order));

                foreach (var father in fathers)
                {
                    var listChild = Model.FindAll(f => f.ParentID == father.FunctionID && f.IsDisplay);
                    listChild.Sort((f1, f2) => f1.Order.CompareTo(f2.Order));
                    if (listChild.Count > 0)
                    {
                        <li class="m-menu__item  m-menu__item--submenu" id="@father.ParentID" function-id="@father.ParentID" aria-haspopup="true" data-menu-submenu-toggle="hover">
                            <a href="javascript:;" class="m-menu__link m-menu__toggle">
                                <i class="m-menu__link-icon @father.CssIcon"></i>
                                <span class="m-menu__link-text">
                                    @father.FunctionName
                                </span><i class="m-menu__ver-arrow la la-angle-right"></i>
                            </a>
                            <div class="m-menu__submenu">
                                <span class="m-menu__arrow"></span>
                                <ul class="m-menu__subnav">

                                    @foreach (var function in listChild)
                                    {
                                        @Html.Raw(CommonController.GetChildMenu(function, Model))
                                    }

                                </ul>
                            </div>
                        </li>

                    }
                }
            }
        </ul>
    </div>
    <!-- END: Aside Menu -->
</div>


<script type="text/javascript">

    $(document).ready(function () {

    });
    //m-menu__item--active
</script>